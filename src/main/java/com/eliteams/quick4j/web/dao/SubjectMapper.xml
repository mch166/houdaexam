<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.SubjectMapper">
    <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.Subject">
        <id column="id" property="id" jdbcType="BIGINT" />
          <result column="sjid" property="sjid" jdbcType="BIGINT" />
       <result column="tmtitle" property="tmtitle" jdbcType="VARCHAR" />
        <result column="optionA" property="optionA" jdbcType="VARCHAR" />
        <result column="optionB" property="optionB" jdbcType="VARCHAR" />
        <result column="optionC" property="optionC" jdbcType="VARCHAR" />
        <result column="optionD" property="optionD" jdbcType="VARCHAR" />
        <result column="answer" property="answer" jdbcType="INTEGER" />
         <result column="tmxh" property="tmxh" jdbcType="VARCHAR" />
          <result column="parse" property="parse" jdbcType="VARCHAR" /> 
          <result column="type" property="type" jdbcType="VARCHAR" /> 
  </resultMap>

    <sql id="Base_Column_List">
        id, sjid, tmtitle, optionA, optionB,optionC,optionD,answer,tmxh,parse,type
    </sql>
    
    <sql id="Base_Column_List_sj">
        tm.id, tm.sjid, tm.tmtitle, tm.optionA, tm.optionB,tm.optionC,tm.optionD,tm.answer,tm.tmxh,tm.parse,tm.type,sj.name as sjmc 
    </sql>
    
    <select id="selectBySjid" resultType="com.eliteams.quick4j.web.model.Subject" parameterType="map">
        select
        <include refid="Base_Column_List_sj" />
        from tm_tbl tm
        left join sj_tbl sj on sj.id=tm.sjid
        where sjid= #{sjid}
		order by tmxh 
		<if test="m!=null and n!=null">
			Limit ${m},${n}
		</if>
    </select>
    
       <insert id="insert" parameterType="com.eliteams.quick4j.web.model.Subject">
        insert into tm_tbl (sjid, tmtitle, optionA, optionB,optionC,optionD,answer,tmxh,parse,type)
        values (#{sjid}, #{tmtitle},#{optionA}, #{optionB},#{optionC}, #{optionD},#{answer}, #{tmxh},#{parse},#{type})
    </insert>
    
    
     <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from tm_tbl
        where id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="selectByTmxh" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from tm_tbl
        where sjid= #{sjid} and tmxh=#{tmxh}
    </select>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.Subject">   
        update tm_tbl
        <set>
            <if test="tmtitle != null">
                tmtitle = #{tmtitle,jdbcType=VARCHAR},
            </if>
             <if test="optionA != null">
                optionA = #{optionA,jdbcType=VARCHAR},
            </if>
             <if test="optionB != null">
                optionB = #{optionB,jdbcType=VARCHAR},
            </if>
            <if test="optionC != null">
                optionC = #{optionC,jdbcType=VARCHAR},
            </if>
            <if test="optionD != null">
                optionD = #{optionD,jdbcType=VARCHAR},
            </if>
            <if test="answer != null">
                answer = #{answer,jdbcType=VARCHAR},
            </if>
            <if test="tmxh != null">
                tmxh = #{tmxh,jdbcType=VARCHAR},
            </if>
            <if test="parse != null">
                parse = #{parse,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    
     <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tm_tbl
        where id = #{id,jdbcType=BIGINT}
    </delete>
    
    <delete id="deleteBySjid" parameterType="String">
        delete from tm_tbl
        where sjid = #{sjid,jdbcType=BIGINT}
    </delete>
  
    <select id="getRowCnts" resultType="int">
		SELECT
		FOUND_ROWS();
	</select>
</mapper>